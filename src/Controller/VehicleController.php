<?php


namespace App\Controller;

use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use App\Entity\Vehicle;
use App\Entity\Detallcompra;
use App\Form\VehicleType;
use App\Form\CompraType;

class VehicleController extends Controller
{
    /**
     * @Route("/vehicles",name="vehicles")
     */
    public function altvehicles($name='demo'){
         //Request $request: Por la duda
        // para obtener todas los datos de vehiculos.
        
        $vehicles = $this->getDoctrine()->getRepository('App:Vehicle')->findAll();
        $users = $this->getDoctrine()->getRepository('App:User')->findAll();
        $compras = $this->getDoctrine()->getRepository('App:Compra')->findAll();
        return $this->render('vehicle/altvehicles.html.twig',[
            
            'vehicles' => $vehicles, 
            'users' => $users,
            'compras' => $compras, 
            'name'=> $name]);
    }
    
      /**
     * @Route("/vehicless",name="vehicless")
     */
    public function comprvehicless($name='demo'){
         //Request $request: Por la duda
        // para obtener todas los datos de vehiculos.
        
        $vehicles = $this->getDoctrine()->getRepository('App:Vehicle')->findAll();
        $users = $this->getDoctrine()->getRepository('App:User')->findAll();
        $compras = $this->getDoctrine()->getRepository('App:Compra')->findAll();
            $repository->find($id);
              //Insertarmos en la base de datos
        
        return $this->render('compra/comprvehicless.html.twig',[
            
            'vehicles' => $vehicles, 
            'users' => $users,
            'compras' => $compras, 
            'name'=> $name]);
    }
    
      /**
     * @Route("/detallcompras",name="detallcompras")
     */
    public function detallcompras(Request $request)
    {   
        
         $cont = new Detallcompra();
        //crear form
        $form = $this->createForm(CompraType::class, $cont);
       
        //envio de formulario
         $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
               $cont->getPrice("15000");
               $cont->getNumcuenta("ES02-1234-5678-000120");
                $em = $this->getDoctrine()->getManager();
                 $em->persist($cont);
              //Insertarmos en la base de datos
               $em->flush();
            
            return $this->redirectToRoute('homeaction');
        }
        
        return $this->render('compra/detcompra.html.twig', array(
            'form' => $form->createView(),
        ));
         
    }
 
    
     /**
     * @Route("/automovil", name="automovil")
     */
    
    public function verproductos(Request $request){

	// vistaProductos
    $sql="select modelo,marca,Km,color,year_fabricacion,puertas,plazas, price from vehicle";
    
		   $this->query($sql);
		   $res=$this->execute();
			 if($res){
		     $result=$this->resultSet(); 
			  } else {
		$result=null;
				}
		   return $result;//solo hasta aqui
               return $this->render('vehicle/altvehicles.html.twig',[
            'automovil' => automovil,
            'name'=> $name]);
	  }

    /**
    * @return string
    */
    private function generateUniqueFileName()
    {
    // md5() reduces the similarity of the file names generated by
    // uniqid(), which is based on timestamps
    return md5(uniqid());
    }
    /**
     * @Route("/createvehicles", name="createvehicles")
     */
   public function createVehicle(Request $request)
    {
          $vehicles = $this->getDoctrine()->getRepository('App:Vehicle')->findAll();
            $users = $this->getDoctrine()->getRepository('App:User')->findAll();
          $compras = $this->getDoctrine()->getRepository('App:Compra')->findAll();
        $name='demo';
        
        $vehicle = new vehicle();
        $form = $this->createForm(VehicleType::class, $vehicle);
        //$form = $this->createForm(VehicleType::class, $vehicle);
        $form->handleRequest($request);
        
        if ($form->isSubmitted() && $form->isValid()) {
           $vehicle=$form->getData();
           $vehicle->setVehiclekey(0);
           $vehicle->setCompra_id(rand(1, 10));
            $vehicle->setMarca_id(rand(1, 24));      
           $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($vehicle);
            $entityManager->flush();
            
           /*$em = $this->getDoctrine()->getManager();
           $em->persist($vehicle);
           $em->flush();
           
           $user=$this->getUser();
           $bm = $this->getDoctrine()->getManager();
           $bm->persist($user);
           $bm->flush();*/
           
           return $this->redirectToRoute('homeaction');
       }
       //rendering form
        return $this->render('vehicle/newvehicle.html.twig', array(
            'form' => $form->createView(),
            
            'vehicles' => $vehicles,
            'users' => $users,
            'compras' => $compras,
            'name'=> $name
        ));
    }
    
    
    /**
     * @Route("/altvehicles", name="altvehicles")
     */
    public function altavehicle(Request $peticion)
    {
        $vehicle = new Vehicle();
        $formulariovehiculo = $this->createForm(VehicleType::class, $vehicle);
        
        $formulariovehiculo->handleRequest($peticion);
        if($formulariovehiculo->isSubmitted() && $formulariovehiculo->isValid())
        {
       
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($projecto);
            $entityManager->flush();
            
            return $this->redirectToRoute('homeaction');
        }
        return $this->render('vehicle/newvehicle.html.twig', [
            'FormularioProyecto' => $formularioProyecto->createView()
        ]);
    }
    
    
    
    
    /**
     * @Route("/edittvehicle",name="edittvehicle")
     */
    public function editVehicle(Request $request)
    {
        $vehicles = $this->getDoctrine()->getRepository('App:Vehicle')->findAll();
            // user
        $user=$this->getUser();
        foreach($vehicles as $vehicle) {
            if($vehicle == $user->getVehicleid()){
                    $thisvehcile=$vehicle;
                    }
                }
        $vehicle = new Vehicle();
        //form
        $form = $this->createForm(VehicleType::class, $vehicle);
        
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
           $vehicle=$form->getData();

            $file=$vehicle->getLogo();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            $file->move(
                    $this->getLogo('img'),
                    $fileName
            );
            $vehicle->setLogo($fileName);
            $thisvehicle->setModelo($vehicle->getModelo());
            $thisvehicle->setLogo($vehicles->getLogo());
   
           $em = $this->getDoctrine()->getManager();
           $em->persist($thisvehicle);
           $em->flush();
           
           return $this->redirectToRoute('homeaction');
       }
        //rendering form
        return $this->render('vehicle/editvehicle.html.twig', array(
            'form' => $form->createView(),
            'vehicles' => $vehicles
        ));
         
    }
    
     /* Filtra vehiculo por marca y modelo
     * @param string $modelo
     * @param string $marca
     */
    public function getvehicleFiltro(string $modelo, string $direccion, string $marca, string $orden) {
        switch($modelo) {
            case 'marca':
                $vehicles = $this->VehicleRepository->vehiclemam($direccion);
                break;
            case 'modelo':
                $vehicles = $this->VehicleRepository->vehiclemo($direccion);
                break;
            default:
                $vehicles = $this->getDoctrine()
                    ->getMarca(VehicleType::class)
                    ->findBy([], [
                        $modelo => $orden
                    ]);
                break;
        }

        return $this->render('vehicle/altvehicle.html.twig', [
            'vehicles' => $vehicles
        ]);
    }

    public function buscarVehicle(string $marca) {
        $vehicles = $this->VehicleRepository->findByMarca($marca);

        return $this->render('vehicle/altvehicles.html.twig', [
            'vehicles' => $vehicles
        ]);
    }
    
      /**
     * @Route("/vehiculo",name="vehiculo")
     */
    public function myvehiculo($name='demo'){
      $vehicles = $this->getDoctrine()->getRepository('App:Vehicle')->findAll($id);
        
        return $this->render('vehicle/perfilevehicle.html.twig',[
            'vehicles' => $vehicles,
            ]);
    }
    
/*public function show($id)
{
$product = $this->get('doctrine')->getRepository(Product::class)->findOneById($idDelProducto);
$this->render(':product:detail.html.twig',
[
'product' => $product
]);
}*/
}
